<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mmxin.mapper.RequestLogMapper" >
  <resultMap id="BaseResultMap" type="com.mmxin.pojo.RequestLog" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="url" property="url" jdbcType="VARCHAR" />
    <result column="method" property="method" jdbcType="VARCHAR" />
    <result column="classMethod" property="classmethod" jdbcType="VARCHAR" />
    <result column="request" property="request" jdbcType="VARCHAR" />
    <result column="response" property="response" jdbcType="VARCHAR" />
    <result column="ip" property="ip" jdbcType="VARCHAR" />
    <result column="requestTime" property="requesttime" jdbcType="TIMESTAMP" />
    <result column="reponseTime" property="reponsetime" jdbcType="TIMESTAMP" />
    <result column="useTime" property="usetime" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, url, method, classMethod, request, response, ip, requestTime, reponseTime, useTime
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.mmxin.pojo.RequestLogExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from request_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from request_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from request_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.mmxin.pojo.RequestLogExample" >
    delete from request_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.mmxin.pojo.RequestLog" >
    insert into request_log (id, url, method, 
      classMethod, request, response, 
      ip, requestTime, reponseTime, 
      useTime)
    values (#{id,jdbcType=INTEGER}, #{url,jdbcType=VARCHAR}, #{method,jdbcType=VARCHAR}, 
      #{classmethod,jdbcType=VARCHAR}, #{request,jdbcType=VARCHAR}, #{response,jdbcType=VARCHAR}, 
      #{ip,jdbcType=VARCHAR}, #{requesttime,jdbcType=TIMESTAMP}, #{reponsetime,jdbcType=TIMESTAMP}, 
      #{usetime,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.mmxin.pojo.RequestLog" >
    insert into request_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="url != null" >
        url,
      </if>
      <if test="method != null" >
        method,
      </if>
      <if test="classmethod != null" >
        classMethod,
      </if>
      <if test="request != null" >
        request,
      </if>
      <if test="response != null" >
        response,
      </if>
      <if test="ip != null" >
        ip,
      </if>
      <if test="requesttime != null" >
        requestTime,
      </if>
      <if test="reponsetime != null" >
        reponseTime,
      </if>
      <if test="usetime != null" >
        useTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="url != null" >
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="method != null" >
        #{method,jdbcType=VARCHAR},
      </if>
      <if test="classmethod != null" >
        #{classmethod,jdbcType=VARCHAR},
      </if>
      <if test="request != null" >
        #{request,jdbcType=VARCHAR},
      </if>
      <if test="response != null" >
        #{response,jdbcType=VARCHAR},
      </if>
      <if test="ip != null" >
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="requesttime != null" >
        #{requesttime,jdbcType=TIMESTAMP},
      </if>
      <if test="reponsetime != null" >
        #{reponsetime,jdbcType=TIMESTAMP},
      </if>
      <if test="usetime != null" >
        #{usetime,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.mmxin.pojo.RequestLogExample" resultType="java.lang.Integer" >
    select count(*) from request_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update request_log
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.url != null" >
        url = #{record.url,jdbcType=VARCHAR},
      </if>
      <if test="record.method != null" >
        method = #{record.method,jdbcType=VARCHAR},
      </if>
      <if test="record.classmethod != null" >
        classMethod = #{record.classmethod,jdbcType=VARCHAR},
      </if>
      <if test="record.request != null" >
        request = #{record.request,jdbcType=VARCHAR},
      </if>
      <if test="record.response != null" >
        response = #{record.response,jdbcType=VARCHAR},
      </if>
      <if test="record.ip != null" >
        ip = #{record.ip,jdbcType=VARCHAR},
      </if>
      <if test="record.requesttime != null" >
        requestTime = #{record.requesttime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.reponsetime != null" >
        reponseTime = #{record.reponsetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.usetime != null" >
        useTime = #{record.usetime,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update request_log
    set id = #{record.id,jdbcType=INTEGER},
      url = #{record.url,jdbcType=VARCHAR},
      method = #{record.method,jdbcType=VARCHAR},
      classMethod = #{record.classmethod,jdbcType=VARCHAR},
      request = #{record.request,jdbcType=VARCHAR},
      response = #{record.response,jdbcType=VARCHAR},
      ip = #{record.ip,jdbcType=VARCHAR},
      requestTime = #{record.requesttime,jdbcType=TIMESTAMP},
      reponseTime = #{record.reponsetime,jdbcType=TIMESTAMP},
      useTime = #{record.usetime,jdbcType=BIGINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.mmxin.pojo.RequestLog" >
    update request_log
    <set >
      <if test="url != null" >
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="method != null" >
        method = #{method,jdbcType=VARCHAR},
      </if>
      <if test="classmethod != null" >
        classMethod = #{classmethod,jdbcType=VARCHAR},
      </if>
      <if test="request != null" >
        request = #{request,jdbcType=VARCHAR},
      </if>
      <if test="response != null" >
        response = #{response,jdbcType=VARCHAR},
      </if>
      <if test="ip != null" >
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="requesttime != null" >
        requestTime = #{requesttime,jdbcType=TIMESTAMP},
      </if>
      <if test="reponsetime != null" >
        reponseTime = #{reponsetime,jdbcType=TIMESTAMP},
      </if>
      <if test="usetime != null" >
        useTime = #{usetime,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mmxin.pojo.RequestLog" >
    update request_log
    set url = #{url,jdbcType=VARCHAR},
      method = #{method,jdbcType=VARCHAR},
      classMethod = #{classmethod,jdbcType=VARCHAR},
      request = #{request,jdbcType=VARCHAR},
      response = #{response,jdbcType=VARCHAR},
      ip = #{ip,jdbcType=VARCHAR},
      requestTime = #{requesttime,jdbcType=TIMESTAMP},
      reponseTime = #{reponsetime,jdbcType=TIMESTAMP},
      useTime = #{usetime,jdbcType=BIGINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>